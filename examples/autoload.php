<?php
/**
 * This class is used for autocomplete.
 * Class _AUTOLOAD_
 * @noautoload it avoids to index this class
 * @generated by AutoLoadOne 1.8 generated 2018/10/14 12:13:18
 * @copyright Copyright Jorge Castro C - MIT License. https://github.com/EFTEC/AutoLoadOne
 */
class _AUTOLOAD_
{
    var $debug=false;
    /* @var string[] Where $_arrautoloadCustom['namespace\Class']='folder\file.php' */
    private $_arrautoloadCustom = array(
		'MyProject\Connection' => '/folder/multiplenamespace.php',
		'AnotherProject\Connection' => '/folder/multiplenamespace.php',
		'MyProject\Connection2' => '/folder/multiplenamespace2.php',
		'AnotherProject\Connection2' => '/folder/multiplenamespace2.php',
		'F6' => '/folder/subfolder/f6/F6.php',
		'ClassWithoutNameSpace' => '/folder/subfolderalt/ClassWithoutNameSpace.php',
		'nsfolder\subnamespace\CustomClass' => '/folder/subfolderalt/CustomClass.php'
    );
    /* @var string[] Where $_arrautoload['namespace']='folder' */
    private $_arrautoload = array(
		'nsfolder' => '/folder',
		'specialnamespace' => '/folder',
		'nsfolder\subnamespace' => '/folder/subfolder',
		'nsfolder\subnamespace\f1' => '/folder/subfolder/f1',
		'nsfolder\subnamespace\f2' => '/folder/subfolder/f2',
		'nsfolder\subnamespace\f3' => '/folder/subfolder/f3',
		'nsfolder\subnamespace\f4' => '/folder/subfolder/f4',
		'nsfolder\subnamespace\f5' => '/folder/subfolder/f5',
		'sub\sub\sub' => '/folder/subfolder/subsubfolder',
		'nsexternal' => 'C:/temp/folder',
		'nsexternal\somens' => 'C:/temp/folder',
		'mapache_commons' => '../../mapache-commons/lib'
    );
    /* @var boolean[] Where $_arrautoload['namespace' or 'namespace\Class']=true if it's absolute (it uses the full path) */
    private $_arrautoloadAbsolute= array(
		'nsexternal' => true,
		'nsexternal\somens' => true,
		'mapache_commons' => true
    );    
    /**
     * _AUTOLOAD_ constructor.
     * @param bool $debug
     */
    public function __construct($debug=false)
    {
        $this->debug = $debug;
    }
    /**
     * @param $class_name
     * @throws Exception
     */
    public function auto($class_name) {
        // its called only if the class is not loaded.
        $ns = dirname($class_name); // without trailing
        $ns=($ns==".")?"":$ns;        
        $cls = basename($class_name);
        // special cases
        if (isset($this->_arrautoloadCustom[$class_name])) {
            $this->loadIfExists($this->_arrautoloadCustom[$class_name],$class_name);
            return;
        }
        // normal (folder) cases
        if (isset($this->_arrautoload[$ns])) {
            $this->loadIfExists($this->_arrautoload[$ns]."/".$cls.".php",$ns);
            return;
        }
    }

    /**
     * We load the file.    
     * @param string $filename
     * @param string $key key of the class it could be the full class name or only the namespace
     * @throws Exception
     */
    public function loadIfExists($filename,$key)
    {
        if (isset($this->_arrautoloadAbsolute[$key])) {
            $fullFile=$filename; // its an absolute path
        } else {
            $fullFile=__DIR__."/".$filename; // its relative to this path
        }
        if((@include $fullFile) === false) {
            if ($this->debug) {
                throw  new Exception("AutoLoadOne Error: Loading file [".__DIR__."/".$filename."] for class [".basename($filename)."]");
            } else {
                throw  new Exception("AutoLoadOne Error: No file found.");
            }
        }
    }
} // end of the class _AUTOLOAD_
if (defined('_AUTOLOAD_ONEDEBUG')) {
    $_AUTOLOAD_=new _AUTOLOAD_(_AUTOLOAD_ONEDEBUG);
} else {
    $_AUTOLOAD_=new _AUTOLOAD_(false);
}
spl_AUTOLOAD_register(function ($class_name)
{
    global $_AUTOLOAD_;
    $_AUTOLOAD_->auto($class_name);
});
// autorun
@include __DIR__.'/folder/runme.php';
@include __DIR__.'/folder/RunMeClass.php';
@include __DIR__.'/folder/runmelast.php';

